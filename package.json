{
    "name": "eide-mm",
    "displayName": "Embedded IDE",
    "publisher": "cl",
    "author": {
        "name": "cl",
        "url": "https://github0null.io",
        "email": "2584456014@qq.com"
    },
    "keywords": [
        "mcu",
        "arm",
        "armcc",
        "cortex",
        "risc-v",
        "riscv",
        "8051",
        "mcs51",
        "c51",
        "avr",
        "stm8",
        "stm32",
        "z80",
        "pic",
        "msp430",
        "gcc",
        "sdcc",
        "keil",
        "eide",
        "cmsis"
    ],
    "homepage": "https://github.com/github0null/eide/blob/master/README.md",
    "license": "MIT",
    "description": "A mcu development environment for 8051/AVR/STM8/Cortex-M/RISC-V",
    "version": "3.7.1",
    "preview": false,
    "engines": {
        "vscode": "^1.63.0"
    },
    "categories": [
        "Programming Languages",
        "Other",
        "Snippets"
    ],
    "capabilities": {
        "virtualWorkspaces": {
            "supported": false,
            "description": "We not support virtual workspaces now."
        }
    },
    "qna": "https://discuss.em-ide.com/t/FAQ",
    "activationEvents": [
        "workspaceContains:.eide/eide.json",
        "workspaceContains:.eide/EIDE.json",
        "workspaceContains:.EIDE/EIDE.json",
        "onStartupFinished"
    ],
    "icon": "res/icon/icon.png",
    "main": "./dist/extension.js",
    "readme": "https://github.com/github0null/eide/blob/master/README.md",
    "bugs": {
        "url": "https://github.com/github0null/eide/issues",
        "email": "me@github0null.io"
    },
    "repository": {
        "url": "https://github.com/github0null/eide.git",
        "type": "git"
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/ftp": "^0.3.31",
        "@types/iconv-lite": "0.0.1",
        "@types/ini": "^1.3.30",
        "@types/micromatch": "^4.0.2",
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.17",
        "@types/node-7z": "^2.1.4",
        "@types/vscode": "1.63.0",
        "@types/x2js": "^3.1.0",
        "ts-loader": "^6.2.1",
        "tslint": "^5.20.1",
        "typescript": "^3.7.3",
        "webpack": "^4.42.0",
        "webpack-cli": "^3.3.11"
    },
    "dependencies": {
        "iconv-lite": "^0.5.0",
        "ini": "^2.0.0",
        "jsonc": "^2.0.0",
        "micromatch": "^4.0.4",
        "node-7z": "^3.0.0",
        "vscode-cpptools": "^5.0.0",
        "x2js": "3.4.1",
        "yaml": "^1.10.2"
    },
    "contributes": {
        "terminal": {
            "profiles": [
                {
                    "id": "eide.msys.bash",
                    "title": "Eide Msys Bash"
                }
            ]
        },
        "customEditors": [
            {
                "viewType": "cl.eide.map.view",
                "displayName": "MapView",
                "selector": [
                    {
                        "filenamePattern": "*.map.view"
                    }
                ]
            }
        ],
        "walkthroughs": [
            {
                "id": "eide.startup.walkthroughs",
                "title": "%string.eide.startup.walkthroughs%",
                "description": "%string.eide.startup.walkthroughs.detail%",
                "steps": [
                    {
                        "id": "eide.wt.install_tool",
                        "title": "%string.eide.setup.toolchain%",
                        "description": "%string.eide.setup.toolchain.detail%",
                        "media": {
                            "image": "img/setup_toochain.png",
                            "altText": "setup toolchain"
                        },
                        "completionEvents": [
                            "onContext:cl.eide.toolchain_ready"
                        ]
                    },
                    {
                        "id": "eide.wt.start_project",
                        "title": "%string.eide.start_project%",
                        "description": "%string.eide.start_project.detail%",
                        "media": {
                            "image": "img/start_project.png",
                            "altText": "start a project"
                        },
                        "completionEvents": [
                            "onContext:cl.eide.projectActived"
                        ]
                    },
                    {
                        "id": "eide.wt.docs",
                        "title": "%string.eide.open_docs%",
                        "description": "%string.eide.open_docs.detail%",
                        "media": {
                            "image": "img/open_docs.png",
                            "altText": "eide docs"
                        },
                        "completionEvents": [
                            "onLink:https://docs.em-ide.com/"
                        ]
                    }
                ]
            }
        ],
        "configuration": [
            {
                "title": "Embedded IDE",
                "properties": {
                    "EIDE.Cpptools.ForceInclude": {
                        "type": "array",
                        "scope": "resource",
                        "markdownDescription": "Force include file path list for c/c++ plug-in intellisence",
                        "default": []
                    },
                    "EIDE.Option.EnableTelemetry": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.enable.telemetry%",
                        "default": true
                    },
                    "EIDE.Option.ShowOutputFilesInExplorer": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.show.output.files%",
                        "default": true
                    },
                    "EIDE.Option.MapViewParserDepth": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.mapView.parser.depth%",
                        "default": 5
                    },
                    "EIDE.Option.ShowSourceReferences": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.show.source.references%",
                        "default": true
                    },
                    "EIDE.Option.DisableEditorContextMenu": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.disable.editor_context.menu%",
                        "default": false
                    },
                    "EIDE.Option.DisableExplorerContextMenu": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.disable.explorer_context.menu%",
                        "default": false
                    },
                    "EIDE.Cppcheck.ExecutablePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.cppcheck.exec.path%",
                        "default": "${userRoot}/.eide/tools/cppcheck/cppcheck.exe"
                    },
                    "EIDE.Builder.ThreadNumber": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.builder.jobs%",
                        "default": -1,
                        "enum": [
                            -1,
                            1,
                            2,
                            4,
                            6,
                            8,
                            10,
                            12,
                            14,
                            16,
                            18,
                            20,
                            22,
                            24,
                            26,
                            28,
                            30,
                            32
                        ],
                        "enumDescriptions": [
                            "auto",
                            "use single thread mode"
                        ]
                    },
                    "EIDE.Builder.GenerateMakefileParameters": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.builder.gen.makefile.params%",
                        "default": false
                    },
                    "EIDE.Builder.AdditionalCommandLine": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "Append additional commandline when invoke unify_builder",
                        "default": ""
                    },
                    "EIDE.Option.ShowToolbarInEditerTitle": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.show.toolbar.in.editer.title%",
                        "default": true
                    },
                    "EIDE.Option.PrintRelativePathWhenBuild": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.print.relative.path%",
                        "default": true
                    },
                    "EIDE.Option.UseTaskToBuild": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.use.task.to.build%",
                        "default": true
                    },
                    "EIDE.Option.InsertExtraCommandsAtBegin": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.option.insert.extcommands.at.begin%",
                        "default": false
                    },
                    "EIDE.Repository.UseProxy": {
                        "type": "boolean",
                        "scope": "machine",
                        "markdownDescription": "%settings.repo.use.proxy%",
                        "default": true
                    },
                    "EIDE.Repository.Template.Url": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.template.repo.url%",
                        "default": "github0null/eide-templates/contents"
                    },
                    "EIDE.Repository.Template.GithubPersonalToken": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.template.repo.github_token%",
                        "default": ""
                    },
                    "EIDE.Repository.CmsisPack.Url": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.cmsispack.repo.url%",
                        "default": "github0null/eide-cmsis-pack/contents/packages"
                    },
                    "EIDE.SerialPortMonitor.DefaultPort": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.def.port%"
                    },
                    "EIDE.SerialPortMonitor.ShowStatusBar": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.show.toolbar%",
                        "default": true
                    },
                    "EIDE.SerialPortMonitor.useUnixLF": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.use.unix.lf%",
                        "default": false
                    },
                    "EIDE.SerialPortMonitor.BaudRate": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.baud%",
                        "default": 115200
                    },
                    "EIDE.SerialPortMonitor.DataBits": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.data.width%",
                        "default": 8
                    },
                    "EIDE.SerialPortMonitor.Parity": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.parity%",
                        "default": 0,
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "enumDescriptions": [
                            "None",
                            "Odd",
                            "Even",
                            "Mark",
                            "Space"
                        ]
                    },
                    "EIDE.SerialPortMonitor.StopBits": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "%settings.serial.stop.bits%",
                        "default": 1,
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "enumDescriptions": [
                            "One",
                            "Two",
                            "OnePointFive"
                        ]
                    },
                    "EIDE.IAR.STM8.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.iar.stm8.install.folder%",
                        "default": ""
                    },
                    "EIDE.STM8.GNU-SDCC.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "gnu sdcc for stm8 installation path",
                        "default": "${userRoot}/.eide/tools/stm8_gnu_sdcc"
                    },
                    "EIDE.ARM.ARMCC5.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.arm.armcc5.install.folder%",
                        "default": ""
                    },
                    "EIDE.ARM.ARMCC6.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.arm.armcc6.install.folder%",
                        "default": ""
                    },
                    "EIDE.ARM.GCC.Prefix": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.arm.gcc.prefix%",
                        "default": "arm-none-eabi-"
                    },
                    "EIDE.ARM.GCC.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.arm.gcc.install.folder%",
                        "default": "${userRoot}/.eide/tools/gcc_arm"
                    },
                    "EIDE.MM.MM32CC.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.mm.mm32cc.install.folder%",
                        "default": "${userRoot}/.eide/tools/mm32cc"
                    },
                    "EIDE.ARM.INI.Path": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.armcc.ini%",
                        "default": "C:\\Keil_v5\\TOOLS.INI"
                    },
                    "EIDE.JLink.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.jlink.install.folder%",
                        "default": "${userRoot}/.eide/tools/jlink"
                    },
                    "EIDE.OpenOCD.ExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.openocd.install.folder%",
                        "default": "${userRoot}/.eide/tools/openocd/bin/openocd.exe"
                    },
                    "EIDE.STLink.ExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.stlink.install.folder%",
                        "default": "${userRoot}/.eide/tools/st_cube_programer/bin/STM32_Programmer_CLI.exe"
                    },
                    "EIDE.ARM.Option.AutoGenerateRTE_Components": {
                        "type": "boolean",
                        "scope": "resource",
                        "description": "Auto Generate RTE_Components.h",
                        "default": true
                    },
                    "EIDE.ARM.Option.AxfToElf": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "%settings.armcc.convert.axf%",
                        "default": false
                    },
                    "EIDE.STM8.STVP.CliExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.stvp.path%",
                        "default": "${userRoot}/.eide/tools/stvp/STVP_CmdLine.exe"
                    },
                    "EIDE.C51.INI.Path": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.keilc51.ini%",
                        "default": "C:\\Keil_v5\\C51\\TOOLS.INI"
                    },
                    "EIDE.SDCC.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "%settings.sdcc.install.folder%",
                        "default": "${userRoot}/.eide/tools/sdcc"
                    },
                    "EIDE.RISCV.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.riscv.gcc.install.folder%",
                        "default": "${userRoot}/.eide/tools/gcc_riscv"
                    },
                    "EIDE.RISCV.ToolPrefix": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "%settings.riscv.gcc.prefix%",
                        "default": "riscv-none-embed-"
                    },
                    "EIDE.Toolchain.AnyGcc.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "Any gcc toolchain install directory",
                        "default": ""
                    },
                    "EIDE.Toolchain.AnyGcc.ToolPrefix": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "Any gcc **toolchain prefix**",
                        "default": ""
                    }
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "EIDEView",
                    "title": "EIDE",
                    "icon": "./res/icon/activitybar.svg"
                }
            ]
        },
        "views": {
            "EIDEView": [
                {
                    "id": "Project",
                    "name": "%eide.bar.projects%"
                },
                {
                    "id": "Operation",
                    "name": "%eide.bar.operations%"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "Project",
                "contents": "%string.eide.project.welcome%"
            }
        ],
        "commands": [
            {
                "command": "eide.operation.install_toolchain",
                "title": "Install toolchain for eide"
            },
            {
                "command": "eide.operation.import_project",
                "title": "Import a project by eide"
            },
            {
                "command": "eide.operation.new_project",
                "title": "Create a new project by eide"
            },
            {
                "command": "eide.reinstall.binaries",
                "category": "eide",
                "title": "%eide.function.reinstall.binaries%"
            },
            {
                "command": "_cl.eide.workspace.build",
                "title": "%eide.workspace.build%",
                "icon": {
                    "dark": "./res/icon/BuildSelection_16x.svg",
                    "light": "./res/icon/BuildSelection_16x.svg"
                }
            },
            {
                "command": "_cl.eide.workspace.rebuild",
                "title": "%eide.workspace.rebuild%",
                "icon": {
                    "dark": "./res/icon/BuildSolution_16x.svg",
                    "light": "./res/icon/BuildSolution_16x.svg"
                }
            },
            {
                "command": "_cl.eide.workspace.open.config",
                "title": "%eide.workspace.open.config%",
                "icon": {
                    "dark": "./res/icon/ConfigurationFile_16x.svg",
                    "light": "./res/icon/ConfigurationFile_16x.svg"
                }
            },
            {
                "command": "_cl.eide.workspace.make.template",
                "title": "%eide.workspace.make.template%"
            },
            {
                "command": "_cl.eide.project.modify.deps",
                "title": "%eide.item.modify%",
                "icon": {
                    "dark": "./res/icon/ConfigurationFile_16x.svg",
                    "light": "./res/icon/ConfigurationFile_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.import.ext.source.struct",
                "title": "%eide.project.import.ext.project.src.struct%",
                "icon": {
                    "dark": "./res/icon/Import_16x.svg",
                    "light": "./res/icon/Import_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.cppcheck.check_all",
                "title": "%eide.project.run.cppcheck%"
            },
            {
                "command": "_cl.eide.project.cppcheck.clear_all",
                "title": "%eide.project.clear.cppcheck%"
            },
            {
                "command": "_cl.eide.project.source.modify.exclude_list",
                "title": "%eide.explorer.modify.exclude_list%"
            },
            {
                "command": "_cl.eide.project.source.show_disassembly",
                "title": "%eide.source.show.disassembly%"
            },
            {
                "command": "_cl.eide.project.source.show_cmsis_config_wizard",
                "title": "%eide.source.show_cmsis_config_wizard%"
            },
            {
                "command": "_cl.eide.project.source.filesystem_folder_add_file",
                "title": "%eide.explorer.new.file%"
            },
            {
                "command": "_cl.eide.project.source.filesystem_folder_add",
                "title": "%eide.explorer.new.folder%"
            },
            {
                "command": "_cl.eide.project.source.virtual_folder_add_file",
                "title": "%eide.explorer.add.file%"
            },
            {
                "command": "_cl.eide.project.source.virtual_folder_add",
                "title": "%eide.explorer.add.folder%"
            },
            {
                "command": "_cl.eide.project.source.file.show.dir",
                "title": "%eide.explorer.show.file.dir%"
            },
            {
                "command": "_cl.eide.project.source.modify.path",
                "title": "%eide.explorer.modify.file.path%"
            },
            {
                "command": "_cl.eide.project.source.virtual_folder_remove",
                "title": "%eide.explorer.remove.folder%"
            },
            {
                "command": "_cl.eide.project.source.virtual_file_remove",
                "title": "%eide.explorer.remove.file%"
            },
            {
                "command": "_cl.eide.project.source.virtual_folder_rename",
                "title": "%eide.explorer.rename.folder%"
            },
            {
                "command": "_cl.eide.project.refresh",
                "title": "%eide.project.refresh%",
                "icon": {
                    "dark": "./res/icon/refresh-dark.svg",
                    "light": "./res/icon/refresh-light.svg"
                }
            },
            {
                "command": "_cl.eide.project.sourceRoot.refresh",
                "title": "%eide.explorer.root.refresh.folder%",
                "icon": {
                    "dark": "./res/icon/refresh-dark.svg",
                    "light": "./res/icon/refresh-light.svg"
                }
            },
            {
                "command": "_cl.eide.project.historyRecord",
                "title": "%eide.operation.open.history%",
                "icon": {
                    "dark": "./res/icon/Note_16x.svg",
                    "light": "./res/icon/Note_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.clearHistoryRecord",
                "title": "%eide.operation.clear.history%"
            },
            {
                "command": "_cl.eide.project.saveAll",
                "title": "%eide.project.save.all%",
                "icon": {
                    "dark": "./res/icon/SaveAll_16x.svg",
                    "light": "./res/icon/SaveAll_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.setActive",
                "title": "%eide.project.active%"
            },
            {
                "command": "eide.project.buildAndFlash",
                "category": "eide",
                "title": "%eide.project.buildAndFlash%"
            },
            {
                "command": "eide.project.build",
                "category": "eide",
                "title": "%eide.project.build%",
                "icon": {
                    "dark": "./res/icon/BuildSelection_16x.svg",
                    "light": "./res/icon/BuildSelection_16x.svg"
                }
            },
            {
                "command": "eide.project.rebuild",
                "category": "eide",
                "title": "%eide.project.rebuild%",
                "icon": {
                    "dark": "./res/icon/BuildSolution_16x.svg",
                    "light": "./res/icon/BuildSolution_16x.svg"
                }
            },
            {
                "command": "eide.project.clean",
                "category": "eide",
                "title": "%eide.project.clean%",
                "icon": {
                    "dark": "./res/icon/clean_dark_16x.svg",
                    "light": "./res/icon/clean_light_16x.svg"
                }
            },
            {
                "command": "eide.project.uploadToDevice",
                "title": "%eide.project.upload%",
                "category": "eide",
                "icon": {
                    "dark": "./res/icon/TransferDownload_16x.svg",
                    "light": "./res/icon/TransferDownload_16x.svg"
                }
            },
            {
                "command": "eide.project.flash.erase.all",
                "title": "%eide.project.flash.erase.all%",
                "category": "eide",
                "icon": {
                    "dark": "./res/icon/TransferDownload_16x.svg",
                    "light": "./res/icon/TransferDownload_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.showBuildParams",
                "title": "%eide.project.show.commands%"
            },
            {
                "command": "_cl.eide.project.generate.makefile",
                "title": "%eide.project.gen.makefile%"
            },
            {
                "command": "_cl.eide.project.installCMSISHeaders",
                "title": "%eide.package.install.cmsis%",
                "icon": {
                    "dark": "./res/icon/AddBuildQueue_16x.svg",
                    "light": "./res/icon/AddBuildQueue_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.addSrcDir",
                "title": "%eide.explorer.root.add.folder%",
                "icon": {
                    "dark": "./res/icon/AddFolder_16x.svg",
                    "light": "./res/icon/AddFolder_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.modify.files.options",
                "title": "%eide.project.modify.files.options%",
                "icon": {
                    "dark": "./res/icon/ConfigurationFile_16x.svg",
                    "light": "./res/icon/ConfigurationFile_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.removeSrcDir",
                "title": "%eide.explorer.root.remove.folder%",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.close",
                "title": "%eide.project.close%",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.addPackage",
                "title": "%eide.package.install%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.removePackage",
                "title": "%eide.package.remove%",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.setDevice",
                "title": "%eide.package.select.device%",
                "icon": {
                    "dark": "./res/icon/FieldAdded_16x.svg",
                    "light": "./res/icon/FieldAdded_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.exportXml",
                "title": "%eide.project.export.keil%",
                "icon": {
                    "dark": "./res/icon/ExportFile_16x.svg",
                    "light": "./res/icon/ExportFile_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.modifyCompileConfig",
                "title": "%eide.item.modify%",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.switchToolchain",
                "title": "%eide.builder.switch%",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.switchUploader",
                "title": "%eide.flash.switch%",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.modifyUploadConfig",
                "title": "%eide.item.modify%",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.modifyOtherSettings",
                "title": "%eide.item.modify%",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.addIncludeDir",
                "title": "%eide.deps.include.add%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.addLibDir",
                "title": "%eide.deps.inclib.add%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.addDefine",
                "title": "%eide.deps.macro.add%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.showIncludeDir",
                "title": "%eide.deps.include.show%",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.showLibDir",
                "title": "%eide.deps.inclib.show%",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.showDefine",
                "title": "%eide.deps.macro.show%",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.excludeSource",
                "title": "%eide.explorer.exclude.file%",
                "icon": {
                    "dark": "./res/icon/StatusNo_16x.svg",
                    "light": "./res/icon/StatusNo_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.unexcludeSource",
                "title": "%eide.explorer.include.file%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.excludeFolder",
                "title": "%eide.explorer.exclude.folder%",
                "icon": {
                    "dark": "./res/icon/StatusNo_16x.svg",
                    "light": "./res/icon/StatusNo_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.unexcludeFolder",
                "title": "%eide.explorer.include.folder%",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_cl.eide.project.removeDependenceItem",
                "title": "%eide.item.remove%",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.importDependenceFromPack",
                "title": "%eide.package.comp.install%",
                "icon": {
                    "dark": "./res/icon/AddToCollection_16x.svg",
                    "light": "./res/icon/AddToCollection_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.removeDependenceFromPack",
                "title": "%eide.package.comp.uninstall%",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.copyItemValue",
                "title": "%eide.item.copy%",
                "icon": {
                    "dark": "./res/icon/CopyToClipboard_16x.svg",
                    "light": "./res/icon/CopyToClipboard_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.switchMode",
                "title": "%eide.project.switch.target%",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_cl.eide.project.exportAsTemplate",
                "title": "%eide.project.export.template%",
                "icon": {
                    "dark": "./res/icon/TableToFile_16x.svg",
                    "light": "./res/icon/TableToFile_16x.svg"
                }
            },
            {
                "command": "eide.ShowUUID",
                "category": "eide",
                "title": "%eide.function.show.uuid%"
            },
            {
                "command": "eide.c51ToSdcc",
                "category": "eide",
                "title": "%eide.function.convert.keil.to.sdcc%"
            },
            {
                "command": "eide.ReloadJlinkDevs",
                "category": "eide",
                "title": "%eide.function.reload.jlink.dev.list%"
            },
            {
                "command": "eide.ReloadStm8Devs",
                "category": "eide",
                "title": "%eide.function.reload.stm8.dev.list%"
            }
        ],
        "keybindings": [
            {
                "command": "eide.project.uploadToDevice",
                "key": "ctrl+alt+d",
                "when": "cl.eide.projectActived"
            },
            {
                "command": "eide.project.rebuild",
                "key": "ctrl+alt+f7",
                "when": "cl.eide.projectActived"
            },
            {
                "command": "eide.project.build",
                "key": "f7",
                "when": "cl.eide.projectActived && !isInDiffEditor"
            },
            {
                "command": "_cl.eide.project.cppcheck.check_all",
                "key": "ctrl+alt+c",
                "when": "cl.eide.projectActived"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "_cl.eide.workspace.build",
                    "group": "navigation",
                    "when": "view == Project && cl.eide.isWorkspaceProject"
                },
                {
                    "command": "_cl.eide.workspace.rebuild",
                    "group": "navigation",
                    "when": "view == Project && cl.eide.isWorkspaceProject"
                },
                {
                    "command": "_cl.eide.workspace.open.config",
                    "group": "navigation",
                    "when": "view == Project && cl.eide.isWorkspaceProject"
                },
                {
                    "command": "_cl.eide.project.refresh",
                    "group": "navigation",
                    "when": "view == Project"
                },
                {
                    "command": "_cl.eide.project.historyRecord",
                    "group": "navigation",
                    "when": "view == Operation"
                },
                {
                    "command": "_cl.eide.project.clearHistoryRecord",
                    "when": "view == Operation"
                },
                {
                    "command": "_cl.eide.project.saveAll",
                    "group": "navigation",
                    "when": "view == Project"
                }
            ],
            "editor/title": [
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.build",
                    "group": "navigation"
                },
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.clean",
                    "group": "navigation"
                },
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.uploadToDevice",
                    "group": "navigation"
                }
            ],
            "editor/context": [
                {
                    "command": "_cl.eide.project.source.show_disassembly",
                    "group": "commands",
                    "when": "resourceExtname =~ /\\.c$|\\.cpp$|\\.c\\+\\+$|\\.cc$|\\.cxx$|\\.info$|\\.axf$|\\.elf$/ && cl.eide.projectActived && !config.EIDE.Option.DisableEditorContextMenu"
                },
                {
                    "command": "_cl.eide.project.source.show_cmsis_config_wizard",
                    "group": "commands",
                    "when": "resourceLangId =~ /^c$|^cpp$/ && !config.EIDE.Option.DisableEditorContextMenu"
                }
            ],
            "explorer/context": [
                {
                    "command": "eide.c51ToSdcc",
                    "group": "commands",
                    "when": "resourceLangId =~ /^c$|^cpp$/ && cl.eide.projectActived && !config.EIDE.Option.DisableExplorerContextMenu"
                },
                {
                    "command": "_cl.eide.project.source.show_disassembly",
                    "group": "commands",
                    "when": "resourceExtname =~ /\\.c$|\\.cpp$|\\.c\\+\\+$|\\.cc$|\\.cxx$|\\.axf$|\\.elf$/ && cl.eide.projectActived && !config.EIDE.Option.DisableExplorerContextMenu"
                },
                {
                    "command": "_cl.eide.project.source.show_cmsis_config_wizard",
                    "group": "commands",
                    "when": "resourceLangId =~ /^c$|^cpp$/ && !config.EIDE.Option.DisableExplorerContextMenu"
                }
            ],
            "view/item/context": [
                {
                    "command": "_cl.eide.project.cppcheck.check_all",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.cppcheck.clear_all",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.filesystem_folder_add_file",
                    "when": "viewItem == FOLDER || viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.filesystem_folder_add",
                    "when": "viewItem == FOLDER || viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.virtual_folder_add_file",
                    "when": "viewItem == PROJECT || viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.virtual_folder_add",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.virtual_folder_remove",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.virtual_folder_rename",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.virtual_file_remove",
                    "when": "viewItem == V_FILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.file.show.dir",
                    "when": "viewItem == OUTPUT_FILE_ITEM || viewItem == FILE_ITEM || viewItem == EXCFILE_ITEM || viewItem == V_FILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.modify.exclude_list",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.source.modify.path",
                    "when": "viewItem == PROJECT || viewItem == V_FOLDER || viewItem == V_FOLDER_ROOT || viewItem == V_FILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.addPackage",
                    "group": "inline",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_cl.eide.project.removePackage",
                    "group": "inline",
                    "when": "viewItem == PACK_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.setDevice",
                    "group": "inline",
                    "when": "viewItem == PACK_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.addPackage",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_cl.eide.project.installCMSISHeaders",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_cl.eide.project.setActive",
                    "when": "viewItem == SOLUTION && view == Project && cl.eide.enable.active"
                },
                {
                    "command": "_cl.eide.project.switchMode",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.exportAsTemplate",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.exportXml",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.rebuild",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.build",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.clean",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.showBuildParams",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.generate.makefile",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.uploadToDevice",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.flash.erase.all",
                    "when": "view == Project && viewItem == UPLOAD_OPTION"
                },
                {
                    "command": "_cl.eide.project.close",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_cl.eide.project.excludeSource",
                    "group": "inline",
                    "when": "viewItem == FILE_ITEM || viewItem == V_FILE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.unexcludeSource",
                    "group": "inline",
                    "when": "viewItem == EXCFILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.excludeFolder",
                    "group": "inline",
                    "when": "viewItem == FOLDER || viewItem == V_FOLDER || viewItem == V_FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_cl.eide.project.unexcludeFolder",
                    "group": "inline",
                    "when": "viewItem == EXCFOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_cl.eide.project.addSrcDir",
                    "group": "inline",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.addSrcDir",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.modify.files.options",
                    "group": "inline",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.modify.files.options",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.import.ext.source.struct",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_cl.eide.project.sourceRoot.refresh",
                    "group": "inline",
                    "when": "viewItem == OUTPUT_FOLDER || viewItem == FOLDER_ROOT_DEPS || viewItem == FOLDER_ROOT || viewItem == V_FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_cl.eide.project.removeSrcDir",
                    "group": "inline",
                    "when": "viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_cl.eide.project.switchToolchain",
                    "group": "inline",
                    "when": "viewItem == COMPILE_CONFIGURATION && view == Project"
                },
                {
                    "command": "_cl.eide.project.switchUploader",
                    "group": "inline",
                    "when": "view == Project && viewItem == UPLOAD_OPTION"
                },
                {
                    "command": "_cl.eide.project.modifyCompileConfig",
                    "group": "inline",
                    "when": "viewItem == COMPILE_CONFIGURATION_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.modifyUploadConfig",
                    "group": "inline",
                    "when": "viewItem == UPLOAD_OPTION_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.modifyOtherSettings",
                    "group": "inline",
                    "when": "viewItem == SETTINGS_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.modify.deps",
                    "group": "inline",
                    "when": "viewItem == DEPENDENCE && view == Project"
                },
                {
                    "command": "_cl.eide.project.modify.deps",
                    "when": "viewItem == DEPENDENCE && view == Project"
                },
                {
                    "command": "_cl.eide.project.addIncludeDir",
                    "group": "inline",
                    "when": "viewItem == INC_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.showIncludeDir",
                    "group": "inline",
                    "when": "viewItem == INC_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.addLibDir",
                    "group": "inline",
                    "when": "viewItem == LIB_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.showLibDir",
                    "group": "inline",
                    "when": "viewItem == LIB_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.addDefine",
                    "group": "inline",
                    "when": "viewItem == DEFINE_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.showDefine",
                    "group": "inline",
                    "when": "viewItem == DEFINE_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.removeDependenceItem",
                    "group": "inline",
                    "when": "viewItem == INC_ITEM || viewItem == DEFINE_ITEM || viewItem == LIB_ITEM || viewItem == SOURCE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.copyItemValue",
                    "group": "inline",
                    "when": "viewItem == EXCFILE_ITEM || viewItem == FILE_ITEM || viewItem == SRCREF_FILE_ITEM || viewItem == ITEM || viewItem == DEPENDENCE_ITEM || viewItem == INC_ITEM || viewItem == DEFINE_ITEM || viewItem == LIB_ITEM || viewItem == SOURCE_ITEM && view == Project"
                },
                {
                    "command": "_cl.eide.project.importDependenceFromPack",
                    "group": "inline",
                    "when": "viewItem == COMPONENT_GROUP && view == Project"
                },
                {
                    "command": "_cl.eide.project.removeDependenceFromPack",
                    "group": "inline",
                    "when": "viewItem == ACTIVED_GROUP && view == Project"
                }
            ]
        },
        "snippets": [
            {
                "language": "a51",
                "path": "./lang/a51.snippets.json"
            }
        ],
        "languages": [
            {
                "id": "eide-output",
                "mimetypes": [
                    "text/x-code-output"
                ]
            },
            {
                "id": "a51",
                "aliases": [
                    "A51",
                    "8051 Assembly"
                ],
                "extensions": [
                    ".a51",
                    ".A51"
                ],
                "filenamePatterns": [
                    "**/*.a51",
                    "**/*.A51"
                ],
                "configuration": "./lang/a51.language-configuration.json"
            },
            {
                "id": "edasm",
                "aliases": [
                    "EIDE GCC Disassembly"
                ],
                "extensions": [
                    ".edasm"
                ],
                "filenamePatterns": [
                    "**/*.edasm"
                ],
                "configuration": "./lang/edasm.language-configuration.json"
            },
            {
                "id": "axf.info",
                "aliases": [
                    "Armcc Axf Info"
                ],
                "extensions": [
                    ".axf.info"
                ],
                "filenamePatterns": [
                    "**/*.axf.info"
                ],
                "configuration": "./lang/axf.info.language-configuration.json"
            },
            {
                "id": "elf.info",
                "aliases": [
                    "Gnu Elf Info"
                ],
                "extensions": [
                    ".elf.info"
                ],
                "filenamePatterns": [
                    "**/*.elf.info"
                ],
                "configuration": "./lang/elf.info.language-configuration.json"
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": "**/*.flash.json",
                "url": "./lang/stc.flash.verify.json"
            },
            {
                "fileMatch": "**/*.options.keil.json",
                "url": "./lang/8051.keil.verify.json"
            },
            {
                "fileMatch": "**/*.sdcc.json",
                "url": "./lang/sdcc.verify.json"
            },
            {
                "fileMatch": "**/*.options.v5.json",
                "url": "./lang/arm.v5.verify.json"
            },
            {
                "fileMatch": "**/*.options.v6.json",
                "url": "./lang/arm.v6.verify.json"
            },
            {
                "fileMatch": "**/*.options.gcc.json",
                "url": "./lang/arm.gcc.verify.json"
            },
            {
                "fileMatch": "**/*.stm8.gnu-sdcc.json",
                "url": "./lang/stm8.gnu-sdcc.verify.json"
            },
            {
                "fileMatch": "**/*.stm8.iar.json",
                "url": "./lang/stm8.iar.verify.json"
            },
            {
                "fileMatch": "**/*riscv.gcc.options.json",
                "url": "./lang/riscv.gcc.verify.json"
            },
            {
                "fileMatch": "**/*.any.gcc.json",
                "url": "./lang/any.gcc.verify.json"
            }
        ],
        "grammars": [
            {
                "language": "eide-output",
                "scopeName": "eide.output",
                "path": "./lang/eide-output.tmLanguage.json"
            },
            {
                "language": "a51",
                "scopeName": "source.asm.a51",
                "path": "./lang/a51.tmLanguage.json"
            },
            {
                "language": "edasm",
                "scopeName": "source.dasm.gcc",
                "path": "./lang/edasm.tmLanguage.json"
            },
            {
                "language": "axf.info",
                "scopeName": "source.axf.info",
                "path": "./lang/axf.info.tmLanguage.json"
            },
            {
                "language": "elf.info",
                "scopeName": "source.elf.info",
                "path": "./lang/elf.info.tmLanguage.json"
            }
        ],
        "problemMatchers": [
            {
                "name": "armcc",
                "fileLocation": "autoDetect",
                "pattern": [
                    {
                        "regexp": "^\"*([^\"]+)\"*, line (\\d+): (Error|Warning):\\s*(.+): (.+)$",
                        "file": 1,
                        "line": 2,
                        "severity": 3,
                        "code": 4,
                        "message": 5
                    }
                ]
            },
            {
                "name": "gcc",
                "fileLocation": "autoDetect",
                "pattern": [
                    {
                        "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                ]
            },
            {
                "name": "keilc51",
                "fileLocation": "autoDetect",
                "pattern": [
                    {
                        "regexp": "(ERROR|WARNING) (\\w+) IN LINE (\\d+) OF ([^:]+): (.+)",
                        "severity": 1,
                        "code": 2,
                        "line": 3,
                        "file": 4,
                        "message": 5
                    }
                ]
            }
        ]
    }
}